{"version":3,"sources":["logo.svg","Browser.js","favoriteStar.svg","favoriteStarAdd.svg","FavoriteButton.js","FavoriteResize.js","FavoriteLabel.js","FavoritesBar.js","Radio.js","Filters.js","FilteredPlays.js","PlayDetails.js","PlayFocused.js","DefaultView.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Browser","id","className","src","this","props","logo","alt","type","name","value","text","onChange","update","to","onClick","React","Component","FavoriteButton","removeFavorite","updateFavorite","image","isFavorite","favoriteLogoAdd","favoriteLogo","label","FavoriteResize","isOpen","FavoriteLabel","FavoritesBar","classes","display","isFavoriteOpen","isDetailsOpen","favorites","show","map","f","index","setCurrentPlay","title","Radio","isSelected","click","Filters","filters","year","selected","before","after","genre","FilteredPlays","filteredPlays","length","p","likelyDate","checkFavorite","updateFavorites","PlayDetails","isTabSelected","currentTabValue","detailsTabName","makeTabSwitch","lowercaseName","toLowerCase","showTab","formatContent","myContent","info","playData","playsInfo","data","href","wiki","gutenberg","shakespeareOrg","desc","persona","player","innerPlay","character","currentAct","acts","act","currentScene","scenes","scene","searching","search","stageDirection","speeches","s","speaker","lines","l","indexLine","highlightClassName","searchWords","textToHighlight","stagedir","console","log","PlayFocused","createSelectMenu","propertyName","selectedDefault","extra","extraOption","toReturn","updateFilters","opt","getActIndex","e","synopsis","DefaultView","updateDisplay","plays","playIsFavorite","focusedPlay","autofillFilters","autofillInnerPlayFilters","Header","isAboutOpen","App","mounted","checkLocation","state","window","location","pathname","updatingDisplay","updateState","useLocalStorage","varName","updateTo","localStorage","setItem","JSON","stringify","parse","getItem","updatingState","Array","isArray","forEach","v","setState","modifyFavorite","favoriteId","changedFavorites","find","findIndex","splice","newFavorite","allPlays","push","useFilters","currentTarget","updatingFilters","toUpdate","target","parentElement","updateMatching","checkIfFavorite","playId","matchedPlays","filter","includes","clickSetCurrentPlay","play","getAttribute","currentPlay","api","fetch","then","resp","json","hasReceivedPlay","catch","error","message","getIndexOfAct","actName","matchingPlays","isShowingAbout","setInterval","a","tempData","path","element","updateInput","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Modal","setAppElement"],"mappings":"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","file":"static/js/main.a8061f6f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport './Browser.css';\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Browser extends React.Component {\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    */\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Browser\">\r\n                <img className=\"hero\" src={this.props.logo} alt=\"Background\" />\r\n                <div id=\"browserSearch\">\r\n                    <h1>Play Browser</h1>\r\n                    <label className=\"textInput\" >Title:\r\n                        <input type=\"text\" name=\"title\" value={this.props.text} onChange={this.props.update}/>  \r\n                    </label> \r\n                    <button className=\"button\">\r\n                        <Link to=\"/COMP-4513-Fall2021-Assignment1/home\" name=\"search\" onClick={this.props.update}>Show Matching Plays</Link>\r\n                    </button> \r\n                    <button className=\"button\">\r\n                        <Link to=\"/COMP-4513-Fall2021-Assignment1/home\" name=\"clear\" onClick={this.props.update}>Show All Plays</Link>\r\n                    </button> \r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Browser;","export default __webpack_public_path__ + \"static/media/favoriteStar.2025c704.svg\";","export default __webpack_public_path__ + \"static/media/favoriteStarAdd.73b8c903.svg\";","import favoriteLogo from './favoriteStar.svg';\r\nimport favoriteLogoAdd from './favoriteStarAdd.svg';\r\nimport './FavoriteButton.css'; \r\nimport React from 'react';\r\n\r\n//import {Link} from 'react-router-dom';\r\n\r\nclass FavoriteButton extends React.Component {\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    */\r\n\r\n    removeFavorite = () => {\r\n        this.props.updateFavorite(\r\n            this.props.id\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const image = (this.props.isFavorite) ? <img src={favoriteLogoAdd} alt=\"Favorite\" /> : <img src={favoriteLogo} alt=\"Unfavorite\" />\r\n        const label = (this.props.isFavorite) ? <div>Del</div> : <div>Add</div> \r\n\r\n        return (\r\n            <button className=\"button favorite\" name=\"favorite\" onClick={this.removeFavorite}>\r\n                {image}{label}\r\n            </button> \r\n        );\r\n    }\r\n}\r\n\r\n//value={this.props.play} \r\n\r\nexport default FavoriteButton;\r\n","import './FavoriteResize.css'; \r\nimport React from 'react';\r\n\r\n//import {Link} from 'react-router-dom';\r\n\r\nclass FavoriteResize extends React.Component {\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    */\r\n\r\n    removeFavorite = () => {\r\n        this.props.updateFavorite(\r\n            this.props.id\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const label = (this.props.isOpen) ? \"◄\" : \"►\"; \r\n  \r\n\r\n        return (\r\n        <button className=\"button favoriteToggle\" name=\"favoriteToggle\" onClick={this.props.update}>\r\n            {label}\r\n        </button>       \r\n        );\r\n    }\r\n}\r\n\r\n//value={this.props.play} \r\n\r\nexport default FavoriteResize;\r\n","import favoriteLogo from './favoriteStar.svg';\r\nimport favoriteLogoAdd from './favoriteStarAdd.svg';\r\nimport './FavoriteButton.css'; \r\nimport React from 'react';\r\n\r\n//import {Link} from 'react-router-dom';\r\n\r\nclass FavoriteLabel extends React.Component {\r\n\r\n    render() {\r\n        //if()\r\n        const image = (this.props.isFavorite) ? <img src={favoriteLogoAdd} className=\"favoriteLabel\" alt=\"Favorite\" /> : <img src={favoriteLogo} className=\"favoriteLabel\" alt=\"Unfavorite\" />\r\n\r\n        return (image);\r\n    }\r\n}\r\n\r\n//value={this.props.play} \r\n\r\nexport default FavoriteLabel;\r\n","import './FavoritesBar.css';\r\nimport React from 'react';\r\nimport FavoriteButton from './FavoriteButton';\r\nimport FavoriteResize from './FavoriteResize';\r\nimport {Link} from 'react-router-dom';\r\nimport FavoriteLabel from './FavoriteLabel';\r\n\r\nclass FavoritesBar extends React.Component {\r\n    /*\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    */\r\n\r\n    render() {\r\n        let classes = (this.props.display.isFavoriteOpen) ? \"favoritesBar tc2\" : \"favoritesBar tc2 favoritesBarClosed \"\r\n        classes += (this.props.display.isDetailsOpen) ? \" playTheme\" : \"\";\r\n        if(this.props.favorites) {\r\n            return (\r\n                <section className={classes}>\r\n                    <h2>Favorites</h2>\r\n                    <FavoriteLabel isFavorite={true}/>\r\n                    <FavoriteResize isOpen={this.props.display.isFavoriteOpen} update={this.props.show}/>\r\n                    <div>\r\n                        {this.props.favorites.map((f, index) => <div key={index}> <Link to=\"/COMP-4513-Fall2021-Assignment1/details\"  value={f.id} name=\"gotoDetails\" onClick={this.props.setCurrentPlay}>{f.title}</Link> <FavoriteButton isFavorite={true} id={f.id} updateFavorite={this.props.update}/> </div>)}\r\n                    </div>\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"favoritesBar\">\r\n                    Loading...\r\n                </section>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FavoritesBar;\r\n","import React from 'react';\r\n\r\nclass Radio extends React.Component {\r\n\r\n    render() {\r\n\r\n        if(this.props.isSelected) {\r\n            return (\r\n                <button className=\"radio radioSelect\" name=\"timeSelect\" value={this.props.value} onClick={this.props.click} >\r\n                    <div> </div>\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button className=\"radio\" name=\"timeSelect\" value={this.props.value} onClick={this.props.click} >\r\n                    <div> </div>\r\n                </button>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Radio;","import React from 'react';\r\nimport './Filters.css';\r\nimport Radio from './Radio.js'\r\n\r\nclass Filters extends React.Component {\r\n\r\n    render() {\r\n        //console.log(this.props.plays)\r\n        \r\n        let isOpen = (!this.props.display.isDetailsOpen) ? \"filters tc2\" : \"leftTwixClosed filters tc2\";\r\n\r\n        isOpen += \" leftTwix\";\r\n\r\n        return (\r\n            <section className={isOpen}>\r\n                <h2>Play Filters</h2>\r\n                <h3>Title</h3>\r\n                <input type=\"text\" name=\"title\" value={this.props.filters.title} onChange={this.props.update}/>\r\n                <h3>Year</h3>\r\n                <Radio value=\"before\" isSelected={this.props.filters.year.selected === \"before\"} click={this.props.update}/> Before:\r\n                    <input type=\"text\" name=\"before\" value={this.props.filters.year.before} onChange={this.props.update}/>\r\n                <br />\r\n                <Radio value=\"after\" isSelected={this.props.filters.year.selected === \"after\"} click={this.props.update}/> After:\r\n                    <input type=\"text\" name=\"after\" value={this.props.filters.year.after} onChange={this.props.update}/>\r\n                <h3>Genre</h3>\r\n                <input type=\"text\" name=\"genre\" value={this.props.filters.genre} onChange={this.props.update}/>\r\n                <br /><br />\r\n                <button className=\"button\" name=\"search\" onClick={this.props.update}> Filter </button> \r\n                <button className=\"button\" name=\"clear\" onClick={this.props.update}> Clear </button> \r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport './FilteredPlays.css';\r\nimport FavoriteButton from './FavoriteButton';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass FilteredPlays extends React.Component {\r\n\r\n    render() {\r\n        let isOpen = (!this.props.display.isDetailsOpen) ? \"filteredPlays tc2\" : \"filteredPlays tc2 rightTwixClosed\";\r\n        isOpen += \" rightTwix\";\r\n\r\n        if(this.props.filteredPlays) {\r\n            if(this.props.filteredPlays.length) {\r\n                return (\r\n                    <section className={isOpen}>\r\n                        <h2 className=\"tc2\">Plays</h2>\r\n                        <div className=\"thePlays\">\r\n                            {this.props.filteredPlays.map((p, index) => \r\n                                <div key={index}> \r\n                                    <h4>{p.title}</h4> \r\n                                    <p>{p.likelyDate}</p> \r\n                                    <FavoriteButton isFavorite={this.props.checkFavorite(p.id)} id={p.id} updateFavorite={this.props.updateFavorites}/> \r\n                                    <button className=\"button viewDetails\"> \r\n                                        <Link to=\"/COMP-4513-Fall2021-Assignment1/details\" value={p.id} name=\"gotoDetails\" onClick={this.props.setCurrentPlay}>View</Link>\r\n                                    </button>  \r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </section>\r\n                );\r\n            } else {\r\n                return (\r\n                    <section className={isOpen}>\r\n                        <h2 className=\"tc2\">Plays</h2>\r\n                        <div className=\"thePlays\">\r\n                            <h3> - No plays found with these filters! </h3>\r\n                        </div>\r\n                    </section>\r\n                );\r\n            }\r\n        } else {\r\n            return (\r\n                <section className=\"filteredPlays tc2\">\r\n                    Loading...\r\n                </section>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default FilteredPlays;","import React from 'react';\r\nimport './PlayDetails.css';\r\n\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\n\r\nclass PlayDetails extends React.Component {\r\n\r\n    isTabSelected = (currentTabValue) => {\r\n        //console.log(currentTabValue.lowercaseName);\r\n        //console.log(this.props.display.detailsTabName.toLowerCase());\r\n        return (this.props.display.detailsTabName === currentTabValue) ? \"button tc4 tabSelected\" : \"button tc4\";\r\n    }\r\n\r\n    makeTabSwitch = (value) => {\r\n        const lowercaseName = value.toLowerCase();\r\n        return (<button name=\"tabSwitch\" value={lowercaseName} className={this.isTabSelected(lowercaseName)} onClick={this.props.showTab}>{value}</button>)\r\n    }\r\n\r\n    formatContent = () => {\r\n        const info = this.props.playData.playsInfo;\r\n        const data = this.props.playData.playData;\r\n\r\n        let myContent;\r\n\r\n        switch(this.props.display.detailsTabName) {\r\n            case \"details\":\r\n                myContent = (\r\n                    <div id=\"detailsContent\">\r\n                        <table className=\"detailsTable\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Likely date of Composition:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td>{info.likelyDate}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Genre:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td>{info.genre}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Wiki Link:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td><a href={info.wiki}>{info.wiki}</a></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Gutenberg Link:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td><a href={info.gutenberg}>{info.gutenberg}</a></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Shakespeare.org Link:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td><a href={info.shakespeareOrg}>{info.shakespeareOrg}</a></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Description:</th>\r\n                                    <td className=\"spaceOut\"></td>\r\n                                    <td>{info.desc}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"characters\":\r\n                myContent = (\r\n                    <div id=\"detailsContent\">\r\n                        <table className=\"detailsTable\">\r\n                            <tbody>\r\n                                {data.persona.map((p, index) => \r\n                                    <tr key={index}>\r\n                                        <th>{p.player}: </th>\r\n                                        <td className=\"spaceOut\"></td>\r\n                                        <td>{p.desc}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"text\":\r\n                //let myContent = ();\r\n\r\n                //textContent += data.acts[this.props.getActIndex(this.props.filters.innerPlay.act, data.acts)].name\r\n\r\n                //{data.acts[this.props.filters.innerPlay.act].scenes[this.props.filters.innerPlay.scene]}\r\n                //console.log(\"Searching: \");\r\n                //console.log([this.props.filters]);\r\n                \r\n\r\n                /*\r\n                <h2 key=\"\">\r\n                    <Highlighter \r\n                        highlightClassName=\"highightedData\"\r\n                        className=\"textData\"\r\n                        searchWords={searching}\r\n                        textToHighlight={data.acts[this.props.getActIndex(this.props.filters.innerPlay.act, data.acts)].name} />\r\n                </h2>\r\n                */\r\n                //{data.acts[this.props.filters.innerPlay.act].scenes}\r\n                if(data && this.props.filters.innerPlay.character) {\r\n                    const currentAct = data.acts[this.props.filters.innerPlay.act];\r\n                    const currentScene = currentAct.scenes[this.props.filters.innerPlay.scene];\r\n\r\n                    let searching = [this.props.filters.innerPlay.search];\r\n\r\n                    myContent = (\r\n                        <div id=\"detailsContent\" className=\"textViewing\">\r\n                            <h2>\r\n                                {data.title}\r\n                            </h2>\r\n                            <h3>\r\n                                {currentAct.name}, {currentScene.name}: {currentScene.title}\r\n                            </h3>\r\n                            <hr />\r\n\r\n                            <h4>{currentScene.stageDirection}</h4>\r\n\r\n                            {currentScene.speeches.map( (s, index) => {\r\n\r\n                                if(s.speaker === this.props.filters.innerPlay.character || this.props.filters.innerPlay.character === \"ALL PLAYERS\") {\r\n                                    return (\r\n                                        <div key={\"Speech: \" + index} className=\"speech\">\r\n                                            <h3>\r\n                                                {s.speaker}\r\n                                            </h3>\r\n                                            {s.lines.map((l, indexLine) => \r\n                                                <p><Highlighter key= {\"Line: \" + indexLine}\r\n                                                    highlightClassName=\"highightedData\"\r\n                                                    className=\"textData\"\r\n                                                    searchWords={searching}\r\n                                                    textToHighlight={l} /></p>\r\n                                            )}\r\n                                            <h4>{s.stagedir}</h4>\r\n                                        </div>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <div key={\"Speech: \" + index} className=\"speech\">\r\n                                            <h3>\r\n                                                {s.speaker}\r\n                                            </h3>\r\n                                            {s.lines.map((l, indexLine) => <p key={\"Line: \" + indexLine}>{l}<br /></p>)}\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                            })}\r\n                            \r\n                            \r\n                        </div>\r\n                    );\r\n                } else {\r\n                    myContent = (\r\n                        <div id=\"detailsContent\" className=\"textViewing\">\r\n                            Loading...\r\n                        </div>\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                myContent = <p>Wow!</p>;\r\n                break;\r\n        }\r\n\r\n        return myContent;\r\n    }\r\n\r\n    render() {\r\n        //!this.props.display.isDetailsOpen\r\n        let isOpen = (this.props.display.isDetailsOpen) ? \"playDetails\" : \"playDetailsClosed playDetails\";\r\n        console.log(this.props.display.isDetailsOpen);\r\n        isOpen += \" rightTwix\";\r\n\r\n        //this.props.filteredPlays\r\n\r\n        //                    {this.props.filteredPlays.map((p, index) => <div key={index}> <h4>{p.title}</h4> <p>{p.likelyDate}</p> <FavoriteButton isFavorite={this.props.checkFavorite(p.id)} id={p.id} updateFavorite={this.props.updateFavorites}/> </div>)}\r\n\r\n        //let myContent = (<p>Wow!</p>);\r\n        \r\n        \r\n\r\n\r\n\r\n        if(this.props.playData.playsInfo && this.props.playData.playData) {\r\n            return (\r\n                <section className={isOpen}>\r\n                    <div id=\"playDetailsNavTabs\">\r\n                        {this.makeTabSwitch(\"Details\")}\r\n                        {this.makeTabSwitch(\"Characters\")}\r\n                        {this.makeTabSwitch(\"Text\")}\r\n                    </div>\r\n                    \r\n                    {this.formatContent()}\r\n\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"playDetailsClosed playDetails rightTwix\">\r\n\r\n                </section>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default PlayDetails;","import React from 'react';\r\nimport './PlayFocused.css';\r\nimport {Link} from 'react-router-dom';\r\nimport FavoriteButton from './FavoriteButton';\r\n\r\nclass PlayFocused extends React.Component {\r\n\r\n    createSelectMenu = (name, propertyName, data, selectedDefault, extra = \"\") => {\r\n\r\n        let extraOption = (extra) ? <option value={extra}>{extra}</option> : \"\";\r\n        if(name === \"character\") {\r\n            console.log(data);\r\n            const toReturn = (\r\n                <select key={name + \"Select\"} name={name} value={selectedDefault} onChange={this.props.updateFilters}>\r\n                    {extraOption}\r\n                    {data.map( (opt, index) => {\r\n                        return (<option key={opt[propertyName]} value={opt[propertyName]}>{opt[propertyName]}</option>);\r\n                    })}\r\n                </select>\r\n            );\r\n            console.log(toReturn);\r\n            return toReturn;\r\n        } else {\r\n            console.log(data);\r\n            const toReturn = (\r\n                <select key={name + \"Select\"} name={name} value={selectedDefault} onChange={this.props.updateFilters}>\r\n                    {extraOption}\r\n                    {data.map( (opt, index) => {\r\n                        return (<option key={opt[propertyName]} value={index}>{opt[propertyName]}</option>);\r\n                    })}\r\n                </select>\r\n            );\r\n            console.log(toReturn);\r\n            return toReturn;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n\r\n        const info = this.props.playData.playsInfo;\r\n        const data = this.props.playData.playData;\r\n\r\n        if(info && data) {\r\n            let isOpen = (this.props.display.isDetailsOpen) ? \"playFocused tc5\" : \"leftTwixClosed playFocused tc5\";\r\n\r\n            isOpen += \" leftTwix\";\r\n\r\n            let myContent;\r\n\r\n            if(this.props.display.detailsTabName === \"text\") {\r\n\r\n                console.log(this.props.getActIndex(this.props.filters.innerPlay.act, data.acts));\r\n                try {\r\n                    myContent = (\r\n                        <div className=\"indent\">\r\n                            {this.createSelectMenu(\"act\", \"name\", data.acts, this.props.filters.innerPlay.act)}\r\n                            <br />\r\n                            {this.createSelectMenu(\"scene\", \"name\", data.acts[this.props.filters.innerPlay.act].scenes, this.props.filters.innerPlay.scene)}\r\n                            <br />\r\n                            {this.createSelectMenu(\"character\", \"player\", data.persona, this.props.filters.innerPlay.character, \"ALL PLAYERS\")}\r\n                            <br />\r\n                            <input type=\"text\" name=\"searchInPlay\" value={this.props.filters.innerPlay.search} onChange={this.props.updateFilters} />\r\n                        </div>\r\n                    );\r\n                } catch(e) {\r\n                    myContent = (\r\n                        <div className=\"indent\">\r\n                            Loading...\r\n                        </div>\r\n                    );\r\n                }\r\n                \r\n            } else {\r\n                myContent = (\r\n                    <div className=\"indent\">\r\n                        <p>{info.synopsis}</p>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <section className={isOpen}>\r\n                    <h2 className=\"leftAlign\">{data.title}</h2>\r\n                    \r\n                    {myContent}\r\n                    \r\n                    <div className=\"alignButtons\">\r\n                        <button className=\"button smallButton viewHome\"> \r\n                            <Link to=\"/COMP-4513-Fall2021-Assignment1/home\" value={info.id} name=\"gotoHome\">Close</Link>\r\n                        </button>  \r\n                        <FavoriteButton isFavorite={this.props.checkFavorite(info.id)} id={info.id} updateFavorite={this.props.updateFavorites}/> \r\n                    </div>\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"leftTwixClosed leftTwix playFocused tc5\">\r\n                    <h2 className=\"leftAlign\">Loading...</h2>\r\n                    <div className=\"indent\">\r\n                        <p>Loading...</p>\r\n                    </div>\r\n                    <div className=\"alignButtons\">\r\n                        <button className=\"button smallButton viewHome\"> \r\n                            <Link to=\"/home\">Close</Link>\r\n                        </button>  \r\n                    </div>\r\n                </section>\r\n            );\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default PlayFocused;","import React from 'react';\r\nimport './DefaultView.css';\r\nimport FavoritesBar from './FavoritesBar.js';\r\nimport Filters from './Filters.js';\r\nimport FilteredPlays from './FilteredPlays.js'\r\nimport PlayDetails from './PlayDetails';\r\nimport PlayFocused from './PlayFocused';\r\n\r\n\r\nclass DefaultView extends React.Component {\r\n\r\n    render() {\r\n        //console.log(this.props.plays)\r\n        // && this.props.display.isDoneTransition\r\n        if(this.props.display.isDetailsOpen) {\r\n            return (\r\n                <div id=\"defaultView\">\r\n                    <FavoritesBar favorites={this.props.favorites} update={this.props.updateFavorites} setCurrentPlay={this.props.setCurrentPlay} display={this.props.display} show={this.props.updateDisplay}/>\r\n                    <div id=\"contentContainer\">\r\n                        <Filters display={this.props.display} filters={this.props.filters} update={this.props.updateFilters} />\r\n                        <FilteredPlays display={this.props.display} filteredPlays={this.props.plays} checkFavorite={this.props.playIsFavorite} updateFavorites={this.props.updateFavorites} setCurrentPlay={this.props.setCurrentPlay}/>\r\n                        <PlayFocused display={this.props.display} playData={this.props.focusedPlay} getActIndex={this.props.getActIndex} checkFavorite={this.props.playIsFavorite} updateFavorites={this.props.updateFavorites} filters={this.props.filters} updateFilters={this.props.updateFilters} autofillFilters={this.props.autofillInnerPlayFilters} />\r\n                        <PlayDetails display={this.props.display} playData={this.props.focusedPlay} getActIndex={this.props.getActIndex} showTab={this.props.updateDisplay} filters={this.props.filters}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div id=\"defaultView\">\r\n                    <FavoritesBar favorites={this.props.favorites} update={this.props.updateFavorites} setCurrentPlay={this.props.setCurrentPlay} display={this.props.display} show={this.props.updateDisplay}/>\r\n                    <div id=\"contentContainer\">\r\n                        <PlayFocused display={this.props.display} playData={this.props.focusedPlay} getActIndex={this.props.getActIndex} checkFavorite={this.props.playIsFavorite} updateFavorites={this.props.updateFavorites} filters={this.props.filters} updateFilters={this.props.updateFilters} autofillFilters={this.props.autofillInnerPlayFilters} />\r\n                        <PlayDetails display={this.props.display} playData={this.props.focusedPlay} getActIndex={this.props.getActIndex} showTab={this.props.updateDisplay} filters={this.props.filters}/>\r\n                        <Filters display={this.props.display} filters={this.props.filters} update={this.props.updateFilters} />\r\n                        <FilteredPlays display={this.props.display} filteredPlays={this.props.plays} checkFavorite={this.props.playIsFavorite} updateFavorites={this.props.updateFavorites} setCurrentPlay={this.props.setCurrentPlay}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DefaultView;","import React from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Modal from 'react-modal'; \r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        console.log(\"Header props: \");\r\n        console.log(this.props);\r\n        console.log(\"Header props Done\");\r\n        return (\r\n            <header className=\"App-header tc1\">\r\n                <div>\r\n                    <Link className=\"logo\" to=\"/COMP-4513-Fall2021-Assignment1/\" name=\"home\" onClick={this.props.update}>\r\n                        <img src={this.props.logo} alt=\"Logo\" />\r\n                    </Link>\r\n                    <button className=\"button\" name=\"aboutOpen\" onClick={this.props.updateDisplay}>\r\n                        About\r\n                    </button> \r\n                </div>\r\n                <Modal isOpen={this.props.isAboutOpen}>\r\n                    <button className=\"button\" name=\"aboutClose\" onClick={this.props.updateDisplay}>Close About</button>\r\n                    <h1>Built with React!</h1>\r\n                    <h2>React Components Used:</h2>\r\n                    <ul>\r\n                        <li>react-modal: <a href=\"https://www.npmjs.com/package/react-modal\">https://www.npmjs.com/package/react-modal</a></li>\r\n                        <li>react-router-dom: <a href=\"https://www.npmjs.com/package/react-router\">https://www.npmjs.com/package/react-router</a></li>\r\n                    </ul>\r\n                    <h2>Play Data from Randy's Server.</h2>\r\n                </Modal>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Browser from './Browser.js'\r\nimport DefaultView from './DefaultView.js'\r\nimport Header from './Header.js'\r\n\r\nimport React from 'react';\r\nimport {Route, Routes} from 'react-router-dom';\r\n//import ReactCSSTransitionGroup from '../node_modules/react-transition-group/CSSTransitionGroup.js';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  //const [searching, setSearching] = React.useState(\"\");\r\n  mounted=false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      favorites: this.useLocalStorage(\"favorites\") || [],\r\n      allPlays: this.useLocalStorage(\"allPlays\") || [],\r\n      filters: this.useLocalStorage(\"filters\") || {\r\n        title: \"\",\r\n        year: {\r\n          before: \"\",\r\n          after: \"\",\r\n          selected: \"before\"\r\n        },\r\n        genre: \"\",\r\n        innerPlay: {\r\n          act: \"\",\r\n          scene: \"\",\r\n          character: \"\",\r\n          search: \"\"\r\n        }\r\n      },\r\n      matchingPlays: this.useLocalStorage(\"matchingPlays\") || [],\r\n      focusedPlay: this.useLocalStorage(\"focusedPlay\") || {},\r\n      display: this.useLocalStorage(\"display\") || {\r\n        isFavoriteOpen: true,\r\n        isDetailsOpen: false,\r\n        detailsTabName: \"details\",\r\n        isShowingAbout: false\r\n      }\r\n    };\r\n    setInterval(() => this.checkLocation(this.state), 500);\r\n    setInterval(() => {console.log(this.state)}, 5000);\r\n  }\r\n\r\n  checkLocation = (state) => {\r\n    //console.log(window.location.pathname);\r\n    //console.log(\"\" + updatingDisplay[\"isDetailsOpen\"] + \", \" + window.location.pathname + \": \" + updatingDisplay[\"isDetailsOpen\"] != window.location.pathname)\r\n    //console.log(state.display.isDetailsOpen);\r\n    //console.log(window.location.pathname);\r\n    //console.log(window.location.pathname === \"/details\");\r\n    //console.log(\"> \" + state.display.isDetailsOpen === (window.location.pathname === \"/details\"));\r\n    \r\n    if(!(state.display.isDetailsOpen) === (window.location.pathname === \"/COMP-4513-Fall2021-Assignment1/details\")) {\r\n      //console.log(state.display.isDetailsOpen)\r\n      let updatingDisplay = {...this.state.display};\r\n      updatingDisplay[\"isDetailsOpen\"] = (window.location.pathname === \"/COMP-4513-Fall2021-Assignment1/details\");\r\n\r\n      updatingDisplay[\"isFavoriteOpen\"] = false;\r\n      //updatingDisplay[\"isDoneTransition\"] = false;\r\n      this.updateState(\"display\", updatingDisplay);\r\n      //updatingDisplay[\"isDoneTransition\"] = true;\r\n      //setTimeout(() => this.updateState(\"display\", updatingDisplay), 1300);\r\n    }\r\n  }\r\n\r\n  useLocalStorage = (varName, updateTo = null) => {\r\n    //returns the value set in localstorage at the varname.\r\n    // providing updateTo updates stored value and returns value of varName\r\n    // not providing updateTo just returns value of varName\r\n    //console.log(\"Looking at localStorage \" + varName + \", \" + ((updateTo) ? \"Has Updates...\" : \"Not Updating...\"));\r\n    if(updateTo) {\r\n      window.localStorage.setItem(varName, JSON.stringify(updateTo));\r\n    }\r\n    return JSON.parse(window.localStorage.getItem(varName));\r\n  }\r\n  \r\n\r\n\r\n  updateState = (varName, updateTo) => {\r\n    if(this.mounted === true) {\r\n      //console.log(`inStateUpdate, updating ${varName} to:`);\r\n      //console.log(updateTo);\r\n      const updatingState = {...this.state};\r\n      //console.log(updatingState);\r\n      if(Array.isArray(varName)) {\r\n        varName.forEach((v, index) => {\r\n          updatingState[v] = updateTo[index];\r\n          this.useLocalStorage(v, updateTo[index]);\r\n        });\r\n      } else {\r\n        updatingState[varName] = updateTo;\r\n        this.useLocalStorage(varName, updateTo);\r\n      }\r\n      this.setState(updatingState);\r\n      console.log(\"State updated to:\");\r\n      console.log(updatingState);\r\n    }\r\n  }\r\n\r\n  modifyFavorite = (favoriteId) => {\r\n    let changedFavorites = [...this.state.favorites];\r\n    console.log(favoriteId);\r\n    if(changedFavorites.find(f => f.id === favoriteId)) {\r\n      console.log(\"isDeleting!\")\r\n      let index = changedFavorites.findIndex(f => f.id === favoriteId);\r\n      console.log(index);\r\n      console.log(changedFavorites[index]);\r\n      changedFavorites.splice(index, 1);\r\n      console.log(changedFavorites);\r\n      this.updateState(\"favorites\", changedFavorites);\r\n    } else {\r\n      console.log(\"Current faves:\");\r\n      console.log(changedFavorites);\r\n      let newFavorite = this.state.allPlays.find(p => p.id === favoriteId);\r\n      console.log(\"New fave:\");\r\n      console.log(newFavorite);\r\n      changedFavorites.push(newFavorite)\r\n      this.updateState(\"favorites\", changedFavorites);\r\n    }\r\n    \r\n        //\r\n        //this.render();\r\n  }\r\n\r\n  useFilters = e => {\r\n    const name = e.currentTarget.name;\r\n    let updatingFilters = {...this.state.filters};\r\n    let toUpdate = true;\r\n    switch(name) {\r\n      case \"title\":\r\n        updatingFilters[\"title\"] = e.target.value;\r\n        break;\r\n      case \"timeSelect\":\r\n        console.log(\"Updating timeSelect\");\r\n        if(e.target.value) {\r\n          updatingFilters[\"year\"][\"selected\"] = e.target.value;\r\n        } else {\r\n          updatingFilters[\"year\"][\"selected\"] = e.target.parentElement.value;\r\n        }    \r\n        break;\r\n      case \"before\":\r\n        updatingFilters[\"year\"][\"before\"] = e.target.value;\r\n        break;\r\n      case \"after\":\r\n        updatingFilters[\"year\"][\"after\"] = e.target.value;\r\n        break;\r\n      case \"genre\":\r\n        updatingFilters[\"genre\"] = e.target.value;\r\n        break;\r\n      case \"search\":\r\n        this.updateMatching(updatingFilters);\r\n        toUpdate = false;\r\n        break;\r\n\r\n      case \"act\":\r\n        updatingFilters[\"innerPlay\"][\"act\"] = e.target.value;\r\n        break;\r\n      case \"scene\":\r\n        updatingFilters[\"innerPlay\"][\"scene\"] = e.target.value;\r\n        break;\r\n      case \"character\":\r\n        updatingFilters[\"innerPlay\"][\"character\"] = e.target.value;\r\n        break;\r\n      case \"searchInPlay\":\r\n        updatingFilters[\"innerPlay\"][\"search\"] = e.target.value;\r\n        break;\r\n\r\n      default:\r\n        console.log(\"Clearing filters!\")\r\n        updatingFilters = {\r\n          title: \"\",\r\n          year: {\r\n            before: \"\",\r\n            after: \"\",\r\n            selected: \"\"\r\n          },\r\n          genre: \"\",\r\n          innerPlay: {\r\n            act: \"\",\r\n            scene: \"\",\r\n            character: \"\",\r\n            search: \"\"\r\n          }\r\n        };\r\n        this.updateMatching(updatingFilters);\r\n        toUpdate = false;\r\n        break;\r\n    }\r\n    if(toUpdate) {\r\n      this.updateState(\"filters\", updatingFilters);\r\n    }\r\n  }\r\n\r\n  updateDisplay = e => {\r\n    const name = e.target.name;\r\n    console.log(\"clicked updateDisplay: \" + name);\r\n    let updatingDisplay = {...this.state.display};\r\n    console.log(updatingDisplay);\r\n    //let toUpdate = true;\r\n    switch(name) {\r\n      case \"favoriteToggle\":\r\n        updatingDisplay[\"isFavoriteOpen\"] = !updatingDisplay[\"isFavoriteOpen\"];\r\n        break;\r\n      case \"gotoDetails\":\r\n        //updatingDisplay[\"isDetailsOpen\"] = true;\r\n        break;\r\n      case \"tabSwitch\":\r\n        updatingDisplay[\"detailsTabName\"] = e.target.value;\r\n        break;\r\n      case \"aboutOpen\":\r\n        console.log(\"Requesting open...\"); \r\n        updatingDisplay[\"isShowingAbout\"] = true;\r\n        break;\r\n      case \"aboutClose\":\r\n        updatingDisplay[\"isShowingAbout\"] = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.updateState(\"display\", updatingDisplay);\r\n  }\r\n\r\n  checkIfFavorite = playId => {\r\n    //console.log(\"IsFavorite: \" + playId + \"?\");\r\n    //console.log(this.state.favorites.find(f => f.id === playId));\r\n    return this.state.favorites.find(f => f.id === playId);\r\n  }\r\n\r\n  updateMatching = filters => {\r\n\r\n    //console.log(\"Updating filtered plays...\");\r\n    if(this.state.allPlays) {\r\n      let matchedPlays = [...this.state.allPlays];\r\n\r\n      //contains title?\r\n      matchedPlays = matchedPlays.filter(p => p.title.toLowerCase().includes(filters.title.toLowerCase()));\r\n\r\n      //correct year?\r\n      if(filters.year.selected) {\r\n        if(filters.year.selected === \"before\" && filters.year.before) {\r\n          matchedPlays = matchedPlays.filter(p => p.likelyDate < filters.year.before);\r\n        } else if(filters.year.after) {\r\n          matchedPlays = matchedPlays.filter(p => p.likelyDate > filters.year.after);\r\n        };\r\n      };\r\n\r\n      //correct genre?\r\n      matchedPlays = matchedPlays.filter(p => p.genre.toLowerCase().includes(filters.genre.toLowerCase()));\r\n\r\n      //console.log(\"Updating filtered plays...\");\r\n      //console.log(matchedPlays);\r\n      this.updateState([\"matchingPlays\", \"filters\"], [matchedPlays, filters]);\r\n    }\r\n    \r\n  }\r\n\r\n  clickSetCurrentPlay = e => {\r\n    const play = e.currentTarget.getAttribute(\"value\");\r\n    const currentPlay = this.state.allPlays.find(p => p.id === play);\r\n    console.log(play);\r\n    const api = `https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=${play}`;\r\n    console.log(api);\r\n    fetch(api)\r\n        .then(resp => resp.json())\r\n        .then(data => this.hasReceivedPlay(data, currentPlay, e))\r\n        .catch(e => {console.error(e)});\r\n  }\r\n\r\n  hasReceivedPlay = (data, currentPlay, e) => {\r\n    console.log(\"Fetched this data:\");\r\n    console.log(data);\r\n    if(data.message) {\r\n      console.log(\"> \" + data.message)\r\n    } else {\r\n      let updatingFilters = this.autofillInnerPlayFilters();\r\n\r\n      this.updateState([\"focusedPlay\", \"filters\"], [{\r\n        playsInfo: currentPlay,\r\n        playData: data\r\n      }, updatingFilters]); \r\n      this.updateDisplay(e);\r\n    }\r\n  }\r\n\r\n  autofillInnerPlayFilters = () => {\r\n    let updatingFilters = {...this.state.filters};\r\n    updatingFilters[\"innerPlay\"] = {};\r\n    updatingFilters[\"innerPlay\"][\"act\"] = 0;\r\n    updatingFilters[\"innerPlay\"][\"scene\"] = 0;\r\n    updatingFilters[\"innerPlay\"][\"character\"] = \"ALL PLAYERS\";\r\n    updatingFilters[\"innerPlay\"][\"search\"] = \"\";\r\n    return updatingFilters;\r\n  }\r\n\r\n  getIndexOfAct = (actName, playData) => {\r\n    return playData.findIndex(act => act.name === actName);\r\n  }\r\n  \r\n  /*\r\n  updateInput = e => {\r\n    let name = e.currentTarget.name;\r\n    switch(name) {\r\n      case \"search\":\r\n        this.updateState(\"searching\", e.target.value);\r\n        break;\r\n      case \"searchAll\":\r\n        this.updateState(\"searching\", \"\");\r\n        break;\r\n      case \"searchMatch\":\r\n        this.updateState(\"searching\", e.target.value);\r\n        break;\r\n      case \"favorite\":\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    /*\r\n    const updatedCompany = {...this.state.company};\r\n    updatedCompany[name] = e.target.value;\r\n    this.setState({company: updatedCompany});\r\n    \r\n  }\r\n  */\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    let tempData = [{\r\n      \"id\": \"hamlet\",\r\n      \"filename\": \"hamlet.json\",\r\n      \"title\": \"Hamlet\"\r\n    }, {\r\n      \"id\": \"hamlet1\",\r\n      \"filename\": \"hamletto.json\",\r\n      \"title\": \"Not Hamlet!\"\r\n    }];\r\n    if(this.useLocalStorage(\"allPlays\")) {\r\n      this.updateState(\"allPlays\", this.useLocalStorage(\"allPlays\"));\r\n    } else {\r\n      try{\r\n        const api = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\r\n        fetch(api)\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n            this.updateState(\"allPlays\", data);\r\n            this.useLocalStorage(\"allPlays\", data);\r\n          })\r\n          .catch(e => this.updateState(\"allPlays\", [...tempData]));\r\n      } catch {\r\n        console.error(\"OH NO FETCH DIED!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  //alert(\"searching: \" + searching);\r\n  render() {\r\n    return (\r\n      <div id=\"App\">\r\n        <Routes>\r\n          <Route path=\"/COMP-4513-Fall2021-Assignment1/\" element={ \r\n            <Browser logo={logo} text={this.state.filters.title} update={this.useFilters}/>\r\n          }/>\r\n\r\n          <Route path=\"/COMP-4513-Fall2021-Assignment1/home\" element={\r\n            <div>\r\n              <Header logo={logo} updateDisplay={this.updateDisplay} isAboutOpen={this.state.display.isShowingAbout}/>\r\n              <DefaultView logo={logo} \r\n                favorites={this.state.favorites} updateFavorites={this.modifyFavorite} \r\n                filters={this.state.filters} updateFilters={this.useFilters}\r\n                searching={this.state.searching} \r\n                plays={this.state.matchingPlays} playIsFavorite={this.checkIfFavorite}\r\n                update={this.updateInput}\r\n                focusedPlay={this.state.focusedPlay} setCurrentPlay={this.clickSetCurrentPlay} autofillInnerPlayFilters={this.autofillInnerPlayFilters} getActIndex={this.getIndexOfAct}\r\n                display={this.state.display}\r\n                updateDisplay={this.updateDisplay}/> \r\n            </div>\r\n          }/>\r\n\r\n          <Route path=\"/COMP-4513-Fall2021-Assignment1/details\" element={\r\n            <div>\r\n              <Header logo={logo} updateDisplay={this.updateDisplay} isAboutOpen={this.state.display.isShowingAbout}/>\r\n              <DefaultView logo={logo} \r\n                favorites={this.state.favorites} updateFavorites={this.modifyFavorite} \r\n                filters={this.state.filters} updateFilters={this.useFilters}\r\n                searching={this.state.searching} \r\n                plays={this.state.matchingPlays} playIsFavorite={this.checkIfFavorite}\r\n                update={this.updateInput}\r\n                focusedPlay={this.state.focusedPlay} setCurrentPlay={this.clickSetCurrentPlay} autofillInnerPlayFilters={this.autofillInnerPlayFilters} getActIndex={this.getIndexOfAct}\r\n                display={this.state.display}\r\n                updateDisplay={this.updateDisplay}/> \r\n            </div>\r\n          }/>\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//<Route path=\"/home\" exact component={DefaultView} />\r\n\r\n/*\r\n\r\n[\"/home\", \"/details\"]\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n*/\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport Modal from 'react-modal';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nModal.setAppElement('#root');\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}